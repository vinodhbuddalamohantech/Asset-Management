/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumAssetsTypeField } from "./EnumAssetsTypeField";
import { EnumAssetsStatus } from "./EnumAssetsStatus";
import { AssignmentsListRelationFilter } from "../../assignments/base/AssignmentsListRelationFilter";
import { DepartmentsWhereUniqueInput } from "../../departments/base/DepartmentsWhereUniqueInput";

@InputType()
class AssetsWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumAssetsTypeField,
  })
  @IsEnum(EnumAssetsTypeField)
  @IsOptional()
  @Field(() => EnumAssetsTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumAssetsStatus,
  })
  @IsEnum(EnumAssetsStatus)
  @IsOptional()
  @Field(() => EnumAssetsStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: () => AssignmentsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AssignmentsListRelationFilter)
  @IsOptional()
  @Field(() => AssignmentsListRelationFilter, {
    nullable: true,
  })
  assignmentsItems?: AssignmentsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DepartmentsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DepartmentsWhereUniqueInput)
  @IsOptional()
  @Field(() => DepartmentsWhereUniqueInput, {
    nullable: true,
  })
  department?: DepartmentsWhereUniqueInput;
}

export { AssetsWhereInput as AssetsWhereInput };
